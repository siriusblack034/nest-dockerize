create-docker-image:
  name: Build and push the Docker image to ECR
  runs-on: ubuntu-latest
  steps:
    - name: Check out the repository
      user: actions/checkout@v3

    - name: Configure AWS credentials
      users: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: us-west-1

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push docker image to Amazon ECR public
      env:
        REGISTRY: ${{steps.login-ecr-public.outputs.registry}}
        REGISTRY_ALIAS: w7f7o1a4
        REPOSITORY: nestjs-api
        IMAGE_TAG: nestjs-api
      run: |
        docker build -t $IMAGE_TAG
        docker tag $IMAGE_TAG:latest $REGISTRY/$REGISTRY_ALIAS/$IMAGE_TAG:latest
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest

deploy:
  name: Deploy the new Docker image to ECS
  runs-on: ubuntu-latest
  needs: create-docker-image
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Update ECS service
      run: |
        aws ecs update-service --cluster nest_cluster --service nestjs_service --task-definition nest_task --force-new-deployment
